///Емельянов Сергей Вариант-3 Лаб-7
/*
Переработать класс, разработанный в ходе выполнения лабораторной работы №6 и являющийся коллекцией объектов,
так, чтобы в ней могли содержаться объекты как базового (лабораторная работа №2.3),
так и производного (лабораторная работа №4) класса.
Для корректной работы ранее выполнявшихся функций коллекции базовый и производный класс должны быть переработаны
так, чтобы содержать:
1)  виртуальные деструкторы (при наличии деструкторов);
2)  методы выдачи символьного ключа сортировки объекта.
    Должны быть предусмотрены разные виды сортировки коллекции для базового и производного классов
    (например, сортировка студентов по фамилиям, а студентов-заочников по месту работы).
    При наличии в коллекции объектов разных типов сначала должны идти объекты базового класса, затем наследника;
3)  методы отображения объекта на экране (сделать виртуальными);
4)  методы заполнения с клавиатуры (сделать виртуальными);
5)  методы сохранения объекта в файле (параметр – указатель на открытый файл);
6)  методы восстановления объекта из файла (параметр – указатель на открытый файл).
Должны быть разработаны методы коллекции:
1)  для отображения на экране отдельных (по номеру) объектов коллекции;
2)  заполнения с клавиатуры отдельных объектов коллекции (по номеру);
3)  вывода коллекции в файл (параметр – имя файла);
4)  ввода коллекции из файла (параметр – имя файла).
*/

#include <stdio.h>
#include <conio.h>
#include "List.h"

int main()
{
    //static

    Discipline *disc = new Grade("one", 2, 3, "four", 5);
    disc->output();
    getch();
    delete disc;

    List staticList;

    Discipline d("six", 7, 8);
    Grade g("one", 2, 3, "four", 5);
    staticList += d;
    staticList += g;
    staticList.show();
    getch();

    staticList.load("staticList.txt");
    staticList.show();

    staticList.sort();
    staticList.show();

    staticList.save("staticListSort.txt");

    staticList.load("staticList.txt");
    staticList.show();

    //dynamic

    List *dynamicList;
    dynamicList = new List();

    dynamicList->load("dynamicList.txt");
    dynamicList->show();

    dynamicList->sort();
    dynamicList->show();

    dynamicList->save("dynamicListSort.txt");

    dynamicList->load("dynamicList.txt");
    dynamicList->show();

    delete dynamicList;

    getch();
    return 0;
}
